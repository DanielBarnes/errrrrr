name: collect other things
on:
  pull_request:
    types: [opened]
    branches:
      - 'main'

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          if [ "${{ github.ref_name }}" != "retain" ]; then
          echo "wrong branch dont run"
          exit 1
          fi
      - run: echo "my pipeline"
      - run: git commit --allow-empty -m "pipeline 1 results"
      - run: git push
  sub-jobs:
    runs-on: ubuntu-latest
    needs: start
    strategy:
      max-parallel: 4
      matrix:
        sub-pipeline: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
      - run: git checkout -b sub-pipeline-${{ matrix.sub-pipeline }}
      - run: echo "running sub-pipeline ${{ matrix.sub-pipeline }}"
      - run: git commit --allow-empty -m "pipeline ${{ matrix.sub-pipeline }} results"
      - run: git push
      - run: git push origin sub-pipeline-${{ matrix.sub-pipeline }}
  merge:
    runs-on: ubuntu-latest
    needs: sub-jobs
    strategy:
      max-parallel: 1
      matrix:
        sub-pipeline: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
      - run: git merge sub-pipeline-${{ matrix.sub-pipeline }}
      - run: git push
  eval:
    runs-on: ubuntu-latest
    needs: merge
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
      - run: echo "evaluating"
      - run: git commit --allow-empty -m "evaluation results"
      - run: git push
      - run: git log --oneline -n 10
